services:
    nginx:
        image: nginx:latest
        ports:
            - 80:80
            - 443:443
        env_file:
            - .env
        volumes:
            - ./nginx:/etc/nginx/templates
            - ./ssl/dhparam:/etc/ssl/certs
            - ./ssl/certbot/etc:/etc/letsencrypt
            - ./ssl/certbot/var:/var/lib/letsencrypt
            - ./ssl/certbot/www:/var/www/html
        networks:
            spacequestnetwork:
                aliases:
                    - graph.spacequest.test
                    - spacequest.test
                    - graph.spacequest.link
                    - spacequest.link

    db:
        image: mongo:6
        hostname: db
        ports:
            - 27017:27017
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
            MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
            MONGO_USER: ${MONGO_USER}
            MONGO_PASSWORD: ${MONGO_PASSWORD}
        volumes:
            - ./data/db:/data/db
            - ./scripts/database/:/docker-entrypoint-initdb.d/
        networks:
            - spacequestnetwork

    gateway:
        build:
            context: ./server
        hostname: gateway
        env_file:
            - .env
        depends_on:
            - microservice-players
            - microservice-games
            - microservice-users
        networks:
            - spacequestnetwork
        command: gateway

    microservice-users:
        build:
            context: ./server
        hostname: microservice-users
        env_file:
            - .env
        depends_on:
            - db
        networks:
            - spacequestnetwork
        command: microservice-users

    microservice-players:
        build:
            context: ./server
        hostname: microservice-players
        env_file:
            - .env
        depends_on:
            - db
        networks:
            - spacequestnetwork
        command: microservice-players

    microservice-games:
        build:
            context: ./server
        hostname: microservice-games
        env_file:
            - .env
        depends_on:
            - db
        networks:
            - spacequestnetwork
        command: microservice-games

    client:
        build:
            context: ./client
        hostname: client
        env_file:
            - .env
        ports:
            - 3000:3000
        networks:
            - spacequestnetwork

networks:
    spacequestnetwork:
        driver: bridge
